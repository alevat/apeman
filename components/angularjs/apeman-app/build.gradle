buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:${gradle_node_plugin_version}"
    }
}

apply plugin: 'com.moowork.node'

npmInstall {
    inputs.file "${projectDir}/package.json"
    outputs.dir "${projectDir}/node_modules"

    doLast {
        println()   // workaround for ProgressCompleteEvent failure
    }
}

task webpack(type: NpmTask) {
    inputs.dir "${projectDir}/src"
    inputs.file "${projectDir}/karma.conf.js"
    inputs.file "${projectDir}/package.json"
    inputs.file "${projectDir}/tsconfig.json"
    inputs.file "${projectDir}/webpack/webpack.build.js"
    outputs.dir "${projectDir}/build/webapp"
    dependsOn npmInstall
    args = ['run', 'build']
}

task webpackDev(type: NpmTask) {
    inputs.dir "${projectDir}/src"
    inputs.file "${projectDir}/karma.conf.js"
    inputs.file "${projectDir}/package.json"
    inputs.file "${projectDir}/tsconfig.json"
    inputs.file "${projectDir}/webpack/webpack.dev.js"
    outputs.dir "${projectDir}/build/webapp"
    dependsOn npmInstall
    args = ['run', 'build-dev']
}

task build {
    dependsOn webpack
}

task buildDev {
    dependsOn webpackDev
}

task clean {
    delete file("${projectDir}/build")
}

task serve(type: NpmTask) {
    dependsOn npmInstall
    dependsOn buildDev
    args = ['run', 'serve']
}

task test(type: NpmTask) {
    dependsOn npmInstall
    inputs.dir "${projectDir}/src"
    inputs.file "${projectDir}/karma.conf.js"
    inputs.file "${projectDir}/package.json"
    inputs.file "${projectDir}/tsconfig.json"
    outputs.dir "${projectDir}/build/test-marker"
    args = ['run', 'test']
    doLast {
        def markerDir = file("${projectDir}/build/test-marker")
        markerDir.setLastModified(System.currentTimeMillis())
        println()   // workaround for ProgressCompleteEvent failure
    }
}

task testStart(type: NpmTask) {
    dependsOn npmInstall
    inputs.dir "${projectDir}/src"
    inputs.file "${projectDir}/karma.conf.js"
    inputs.file "${projectDir}/package.json"
    inputs.file "${projectDir}/tsconfig.json"
    args = ['run', 'test-start']
}

task check {
    dependsOn test
}